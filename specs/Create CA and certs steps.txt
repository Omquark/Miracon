#To make a self signed certificate

#Creates a root CA key and Certificate. Key is encrypted
#Use Baeldung.com as CN
openssl req -x509 -sha256 -newkey rsa:4096 -keyout miraconCA.key -out miraconCA.crt
Need PEM Passphrase(password)
Country Name(US)
State(State)
Locality(City)
Orginizational Name(oname)
Organizational Unit(ounit)
Common Name(minecraft) - This should be the name of your host or website address. This is what you type when you go to the site address. i.e google.com would be entered as google
Email Address(email@email.com)
Challenge password(password)
Company Name(None entered)

#Creates miraconCA.crt and miraconCA.key files. 
#The .key file is the key file to the CA, used to decrypt for creating new certificates under the CA. If you lose this file, no more certificates can be created.
#The .crt is the public CA certificate a browser checks against for validation


#Use the same Common Name as supplied in the previous question and replace minecraft. Again this is the name of the site you will visit in the URL.
openssl req -new -newkey rsa:4096 -keyout minecraft.key -out minecraft.csr
#This creates the key and certificate request required for use during a TLS handshake, for HTTPS

#Creates the server certificate to use for authentication
#See minecraft.ext for details(At bottom)
openssl x509 -req -CA miraconCA.crt -CAkey miraconCA.key -in minecraft.csr -out minecraft.crt -days 365 -CAcreateserial -extfile minecraft.ext

#Changes the key to PEM format for use by the Node server
openssl rsa -in minecraft.key -out minecraft-pem.key

#Creates minecraft-pem.key file, this is needed for the TLS connection.

#File minecraft.ext
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
subjectAltName = @alt_names
[alt_names]
DNS.1 = minecraft